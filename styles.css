@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

body {
  margin: 0;
  text-align: center;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  background: var(--lightgrey);
}
:root {
  --orange: #ec6e00b7;
  --lightblue: #7DD3FC;
  --lightgrey: #F1F5F9;
  --myGrey: #F1F5F9;
  --myRadius: 1.5rem;
  --mySize: calc(.5vw + 2vh + 5px);
  --myTransition: .3s;
  --myScaling1: 1.03;
  --myScaling2: 1.1;
  font-size: calc(10px + .3vw + 1vh);
}
a {
  color: inherit;
  text-decoration: none;
}
.container {
  display: grid;
  grid-template-columns: 1fr 4fr;
  grid-template-rows: 1fr 2fr 2fr 1fr 1fr 1fr;
  width: 100vw;
  height: 100vh;  
}
.header {
  grid-column: 1 / 3;
  grid-row: 1 / 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: var(--orange);
}
.main {
  grid-column: 1/ 3;
  display: flex;
  flex-direction: column;
  gap: var(--mySize);
  padding: var(--mySize);
}
button {
  background: none;
  border: none;
  box-shadow: 2px 2px 2px 2px var(--lightblue);
  padding: 1rem;
  font-size: .9rem;
  font-weight: bold;
  background: white;
  border-radius: var(--myRadius);
  transition: var(--myTransition);
  transition-timing-function: ease-in-out;
}
.buttons {
  display: flex;
  justify-content: center;
  gap: 2rem;
}
.rightButtons {
  display: flex;
  gap: .5rem;
  padding: .5rem;
}
.leftButtons {
  display: flex;
  gap: .5rem;
  width: 10rem;
  padding: .5rem;
  font-size: 0.9rem;
  font-weight: bold;
  transition: var(--myTransition);
  transition-timing-function: ease-in-out;
}
.sideHeader {
  font-size: 1.1rem;
  font-weight: bold;
}
.warning {
  grid-column: 1 / 3;
  grid-row: 6/6;
  font-size: .7rem;
}
.content {
  background: white;
  padding: 1rem;
  border-radius: var(--myRadius);
  transition: var(--myTransition);
  transition-timing-function: ease-in-out;
}
.introQuestion {
  background: white;
  padding: 1rem;
  font-weight: bold;
  border-radius: var(--myRadius);
  transition: var(--myTransition);
  transition-timing-function: ease-in-out;
}


/* Transformations */

button:hover, .content:hover, .introQuestion:hover{
  transition: var(--myTransition);
  transition-timing-function: ease-in-out;
  transform: scale(var(--myScaling1));
  cursor: pointer;
}
button:hover, .leftButtons:hover {
  transform: scale(var(--myScaling2));
}
img {
  width: 1.8rem;
}